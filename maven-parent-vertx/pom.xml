<?xml version="1.0" encoding="UTF-8"?>

<!-- ============================================================================ -->
<!--  Copyright ©  2015-2020,    Cristiano V. Gavião			                  -->
<!--                                                                              -->
<!--  All rights reserved.                                                        -->
<!--  This program and the accompanying materials are made available under        -->
<!--  the terms of the Eclipse Public License v1.0 which accompanies this         -->
<!--  distribution and is available at http://www.eclipse.org/legal/epl-v10.html  -->
<!--                                                                              -->
<!-- ============================================================================ -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>br.com.c8tech.releng</groupId>
    <artifactId>maven-parent-java</artifactId>
    <version>8.1-SNAPSHOT</version>
  </parent>

  <artifactId>maven-parent-vertx</artifactId>
  <name>C8Tech maven parent Vert.x POM.</name>
  <description>A parent POM for Vert.x based projects.</description>
  <packaging>pom</packaging>

    <!-- Due a maven limitation, this MUST be replicated to all children -->
  <url>${c8tech.project.site.url}</url>
  <scm>
    <connection>${c8tech.scm.connection}</connection>
    <developerConnection>${c8tech.scm.connection.dev}</developerConnection>
    <url>${c8tech.scm.url}</url>
    <tag>HEAD</tag>
  </scm>
  <distributionManagement>
    <site>
      <id>${c8tech.distribution.site.id}</id>
      <name>${c8tech.distribution.site.name}</name>
      <url>${c8tech.distribution.site.url}</url>
    </site>
  </distributionManagement>
    <!-- end of per child setting -->

  <properties>
    <vertx.version>4.0.0-SNAPSHOT</vertx.version>
    <vertx-maven-plugin.version>1.0.22</vertx-maven-plugin.version>
    <swagger-parser.version>2.0.20</swagger-parser.version>
    <dockerfile-maven.version>1.4.13</dockerfile-maven.version>
    <graalvm.image.tag>20.0.0-java11</graalvm.image.tag>
    <jib-maven-plugin.version>2.2.0</jib-maven-plugin.version>
    <micrometer.version>1.5.1</micrometer.version>
    <hazelcast.version>4.0.1</hazelcast.version>
    <hazelcast-k8s.version>2.0.1</hazelcast-k8s.version>
    <testcontainers.version>1.14.2</testcontainers.version>
    <flyway.version>6.4.3</flyway.version>
    <jooq.version>3.13.1</jooq.version>
    <postgresql.driver.version>42.3.0</postgresql.driver.version>
    <jackson.version>2.11.0</jackson.version>
    <problem.version>0.24.0</problem.version>

  </properties>

  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>compile</scope>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-stack-depchain</artifactId>
        <version>${vertx.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>io.swagger.parser.v3</groupId>
        <artifactId>swagger-parser-v3</artifactId>
        <version>${swagger-parser.version}</version>
      </dependency>
      <dependency>
        <groupId>org.skyscreamer</groupId>
        <artifactId>jsonassert</artifactId>
        <version>1.5.0</version>
      </dependency>
    </dependencies>
  </dependencyManagement>


    <!-- ======================== -->
    <!--      Vert.x PROFILES     -->
    <!-- ======================== -->
  <profiles>
    <profile>
      <id>linux-epoll</id>
      <activation>
        <file>
          <exists>.c8tech.releng.vertx</exists>
        </file>
        <os>
          <family>unix</family>
          <arch>amd64</arch>
          <name>linux</name>
        </os>
      </activation>
      <dependencies>
        <dependency>
          <groupId>io.netty</groupId>
          <artifactId>netty-transport-native-epoll</artifactId>
          <classifier>linux-x86_64</classifier>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <!-- profile used to setup a maven vertx database access project -->
      <!-- it is activated when a .c8tech.releng.vertx.db file where found. -->
      <id>when-building-vertx-db-project</id>
      <activation>
        <file>
          <exists>.c8tech.releng.vertx.db</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>add-jooq-source</id>
                <phase>process-sources</phase>
                <goals>
                  <goal>add-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>target/generated-sources/jooq</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.driver.version}</version>
          </dependency>
          <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
            <version>${jooq.version}</version>
          </dependency>
          <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <version>${flyway.version}</version>
          </dependency>
        </dependencies>
      </dependencyManagement>
      <dependencies>
        <dependency>
          <groupId>org.jooq</groupId>
          <artifactId>jooq</artifactId>
        </dependency>
        <dependency>
          <groupId>org.flywaydb</groupId>
          <artifactId>flyway-core</artifactId>
        </dependency>
        <dependency>
          <groupId>org.postgresql</groupId>
          <artifactId>postgresql</artifactId>
        </dependency>
        <dependency>
          <groupId>io.vertx</groupId>
          <artifactId>vertx-pg-client</artifactId>
        </dependency>
        <dependency>
          <groupId>org.testcontainers</groupId>
          <artifactId>testcontainers</artifactId>
          <version>${testcontainers.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.testcontainers</groupId>
          <artifactId>postgresql</artifactId>
          <version>${testcontainers.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <version>4.13.1</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <!-- profile used to setup a maven vertx API project -->
      <!-- it is activated when a .c8tech.releng.vertx.http file where found. -->
      <id>when-building-vertx-api-project</id>
      <activation>
        <file>
          <exists>.c8tech.releng.vertx.http</exists>
        </file>
      </activation>
      <properties>
        <oas3.source.directory>./oas3</oas3.source.directory>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-compiler-plugin</artifactId>
              <version>${maven-compiler.version}</version>
              <inherited>true</inherited>
              <configuration>
                <annotationProcessorPaths
                  combine.children="append">
                  <path>
                    <groupId>io.vertx</groupId>
                    <artifactId>vertx-web-api-service</artifactId>
                    <version>${vertx.version}</version>
                  </path>
                  <path>
                    <groupId>io.vertx</groupId>
                    <artifactId>vertx-service-proxy</artifactId>
                    <version>${vertx.version}</version>
                    <classifier>processor</classifier>
                  </path>
                </annotationProcessorPaths>
              </configuration>
            </plugin>
            <plugin>
              <groupId>com.google.cloud.tools</groupId>
              <artifactId>jib-maven-plugin</artifactId>
              <version>${jib-maven-plugin.version}</version>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-oas3-resources</id>
                <phase>validate</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.basedir}/target/generated-resources/oas3</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${oas3.source.directory}</directory>
                      <filtering>false</filtering>
                      <includes>
                        <include>*.oas3.yaml</include>
                      </includes>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>add-oas3-resource</id>
                <phase>process-sources</phase>
                <goals>
                  <goal>add-resource</goal>
                </goals>
                <configuration>
                  <resources>
                    <resource>
                      <directory>target/generated-resources/oas3</directory>
                      <targetPath>oas3</targetPath>
                    </resource>
                  </resources>
                </configuration>
              </execution>
              <execution>
                <id>add-oas3-test-resource</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>add-test-resource</goal>
                </goals>
                <configuration>
                  <resources>
                    <resource>
                      <directory>src/test/scenarios</directory>
                      <targetPath>scenarios</targetPath>
                    </resource>
                  </resources>
                </configuration>
              </execution>
              <execution>
                <id>add-oas3-source</id>
                <phase>process-sources</phase>
                <goals>
                  <goal>add-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>${project.basedir}/src/generated/oas3/src/main/java</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>org.zalando</groupId>
            <artifactId>problem</artifactId>
            <version>${problem.version}</version>
          </dependency>
          <dependency>
            <groupId>org.zalando</groupId>
            <artifactId>jackson-datatype-problem</artifactId>
            <version>${problem.version}</version>
          </dependency>
          <dependency>
            <groupId>io.swagger.parser.v3</groupId>
            <artifactId>swagger-parser-v3</artifactId>
            <version>${swagger-parser.version}</version>
          </dependency>
          <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
          </dependency>
          <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
          </dependency>
          <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
          </dependency>
          <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>${jackson.version}</version>
          </dependency>
          <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web-openapi</artifactId>
            <version>${vertx.version}</version>
          </dependency>
        </dependencies>
      </dependencyManagement>

      <dependencies>
        <dependency>
          <groupId>org.zalando</groupId>
          <artifactId>problem</artifactId>
        </dependency>
        <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-annotations</artifactId>
        </dependency>
        <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-core</artifactId>
        </dependency>
        <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
          <groupId>io.vertx</groupId>
          <artifactId>vertx-hazelcast</artifactId>
        </dependency>
        <dependency>
          <groupId>io.vertx</groupId>
          <artifactId>vertx-service-proxy</artifactId>
        </dependency>
        <dependency>
          <groupId>io.vertx</groupId>
          <artifactId>vertx-web-openapi</artifactId>
          <exclusions>
            <exclusion>
              <groupId>org.slf4j</groupId>
              <artifactId>slf4j-simple</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <groupId>io.vertx</groupId>
          <artifactId>vertx-web-api-service</artifactId>
        </dependency>
        <dependency>
          <groupId>io.vertx</groupId>
          <artifactId>vertx-micrometer-metrics</artifactId>
        </dependency>
      
      <!-- Testing -->
        <dependency>
          <groupId>io.rest-assured</groupId>
          <artifactId>rest-assured</artifactId>
          <version>4.3.0</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.skyscreamer</groupId>
          <artifactId>jsonassert</artifactId>
          <scope>test</scope>
          <version>1.5.0</version>
        </dependency>
        <dependency>
          <groupId>io.vertx</groupId>
          <artifactId>vertx-junit5-web-client</artifactId>
          <version>${vertx.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.testcontainers</groupId>
          <artifactId>junit-jupiter</artifactId>
          <version>${testcontainers.version}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <!-- profile used to setup a maven based bundle development project -->
      <!-- it is activated when a .c8tech.releng.vertx file where found. -->
      <id>when-building-vertx-project</id>
      <activation>
        <file>
          <exists>.c8tech.releng.vertx</exists>
        </file>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-compiler-plugin</artifactId>
              <version>${maven-compiler.version}</version>
              <inherited>true</inherited>
              <configuration>
                <annotationProcessorPaths
                  combine.children="append">
                  <path>
                    <groupId>io.vertx</groupId>
                    <artifactId>vertx-codegen</artifactId>
                    <version>${vertx.version}</version>
                    <classifier>processor</classifier>
                  </path>
                </annotationProcessorPaths>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast</artifactId>
            <version>${hazelcast.version}</version>
          </dependency>
          <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast-kubernetes</artifactId>
            <version>${hazelcast-k8s.version}</version>
          </dependency>
        </dependencies>
      </dependencyManagement>
      <dependencies>
        <dependency>
          <groupId>io.vertx</groupId>
          <artifactId>vertx-codegen</artifactId>
        </dependency>
        <dependency>
          <groupId>io.vertx</groupId>
          <artifactId>vertx-core</artifactId>
        </dependency>
        <dependency>
          <groupId>io.vertx</groupId>
          <artifactId>vertx-config</artifactId>
        </dependency>
        <dependency>
          <groupId>io.vertx</groupId>
          <artifactId>vertx-config-yaml</artifactId>
        </dependency>
        <dependency>
          <groupId>io.vertx</groupId>
          <artifactId>vertx-health-check</artifactId>
        </dependency>
        <dependency>
          <groupId>io.vertx</groupId>
          <artifactId>vertx-auth-oauth2</artifactId>
        </dependency>
        <dependency>
          <groupId>io.vertx</groupId>
          <artifactId>vertx-auth-common</artifactId>
        </dependency>
        <dependency>
          <groupId>com.hazelcast</groupId>
          <artifactId>hazelcast</artifactId>
        </dependency>
        <dependency>
          <groupId>io.vertx</groupId>
          <artifactId>vertx-hazelcast</artifactId>
        </dependency>
        <dependency>
          <groupId>org.jooq</groupId>
          <artifactId>jool</artifactId>
        </dependency>
        <dependency>
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>jsr305</artifactId>
          <version>3.0.2</version>
        </dependency>
        <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>jul-to-slf4j</artifactId>
          <version>${slf4j.version}</version>
        </dependency>
        <dependency>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-classic</artifactId>
          <version>${logback.version}</version>
          <scope>compile</scope>
        </dependency>
        <dependency>
          <groupId>io.vertx</groupId>
          <artifactId>vertx-micrometer-metrics</artifactId>
        </dependency>
        <dependency>
          <groupId>io.micrometer</groupId>
          <artifactId>micrometer-registry-prometheus</artifactId>
          <version>${micrometer.version}</version>
        </dependency>
        <dependency>
          <groupId>io.micrometer</groupId>
          <artifactId>micrometer-registry-jmx</artifactId>
          <version>${micrometer.version}</version>
        </dependency>
        <dependency>
          <groupId>io.vertx</groupId>
          <artifactId>vertx-junit5</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>build-fat-jar</id>
      <activation>
        <file>
          <exists>.c8tech.releng.vertx.launcher</exists>
        </file>
        <property>
          <name>build.fatjar</name>
        </property>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>io.reactiverse</groupId>
              <artifactId>vertx-maven-plugin</artifactId>
              <version>${vertx-maven-plugin.version}</version>
              <configuration>
                <vertxVersion>${vertx.version}</vertxVersion>
                <projectGroupId>${project.groupId}</projectGroupId>
                <projectArtifactId>${project.artifactId}</projectArtifactId>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>io.reactiverse</groupId>
            <artifactId>vertx-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>vmp</id>
                <goals>
                  <goal>initialize</goal>
                  <goal>package</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>build-docker-image-for-dev</id>
      <activation>
        <file>
          <exists>.c8tech.releng.docker</exists>
        </file>
        <property>
          <name>build.docker.dev</name>
        </property>
      </activation>
      <properties>
        <c8tech.docker.userid>anUser</c8tech.docker.userid>
        <c8tech.docker.image.name>${project.artifactId}</c8tech.docker.image.name>
        <c8tech.docker.image.tag>${project.version}</c8tech.docker.image.tag>
        <c8tech.docker.port>8082</c8tech.docker.port>
        <c8tech.docker.workDir>app</c8tech.docker.workDir>
        <c8tech.docker.baseImage>gcr.io/distroless/java:11</c8tech.docker.baseImage>
        <c8tech.docker.image.namespace></c8tech.docker.image.namespace>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>com.google.cloud.tools</groupId>
              <artifactId>jib-maven-plugin</artifactId>
              <version>${jib-maven-plugin.version}</version>
              <configuration>
                <from>
                  <image>${c8tech.docker.baseImage}</image>
                </from>
                <to>
                  <image>${c8tech.docker.image.namespace}${project.artifactId}:${project.version}</image>
                </to>
                <container>
                  <workingDirectory>${c8tech.docker.workDir}</workingDirectory>
                </container>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>com.google.cloud.tools</groupId>
            <artifactId>jib-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>build</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>push-docker-registry-local</id>
      <activation>
        <file>
          <exists>.c8tech.releng.docker</exists>
        </file>
        <property>
          <name>withPush.toLocal</name>
        </property>
      </activation>
      <properties>
        <c8tech.docker.registry.ip>localhost:32000</c8tech.docker.registry.ip>
        <c8tech.docker.image.namespace>${c8tech.docker.registry.ip}/</c8tech.docker.image.namespace>
      </properties>
    </profile>
    <profile>
      <id>push-to-dockerhub</id>
      <activation>
        <file>
          <exists>.c8tech.releng.docker</exists>
        </file>
        <property>
          <name>withPush.toDockerHub</name>
        </property>
      </activation>
      <properties>
        <c8tech.docker.registry.ip>docker.io</c8tech.docker.registry.ip>
        <c8tech.docker.image.namespace>${c8tech.docker.registry.ip}/${c8tech.docker.userid}/</c8tech.docker.image.namespace>
      </properties>
    </profile>
  </profiles>
</project>
